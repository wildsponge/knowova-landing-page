import {
  isEqual
} from "./chunk-O6JSKLNS.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/minimal-shared/dist/utils/index.js
function p(r) {
  try {
    let t = new URL(r, window.location.origin);
    return Array.from(t.searchParams.keys()).length > 0;
  } catch {
    return false;
  }
}
function a(r) {
  return r !== "/" && r.endsWith("/") ? r.slice(0, -1) : r;
}
function T(r, t, e = { deep: true }) {
  let n = (o) => {
    try {
      let { pathname: i, searchParams: s } = new URL(o.trim(), "http://dummy");
      return e.deep ? { pathname: a(i), params: Object.fromEntries(s) } : { pathname: a(i) };
    } catch {
      return { pathname: "" };
    }
  };
  return isEqual(n(t), n(r));
}
function f(r) {
  try {
    let t = new URL(r, window.location.origin);
    return a(t.pathname);
  } catch {
    return r;
  }
}
function m(r) {
  return /^https?:\/\//i.test(r);
}
function C(r, t) {
  var _a;
  let e = t ?? "/";
  if (!r || typeof window > "u" || !((_a = window.location) == null ? void 0 : _a.origin)) return e;
  try {
    let n = new URL(r, window.location.origin), o = n.origin === window.location.origin, i = n.pathname.startsWith("/") && !n.pathname.startsWith("//"), s = /^\/:+$/.test(n.pathname), c = n.pathname === "/" && !n.search && n.hash;
    return o && i && !s && !c ? `${n.pathname}${n.search}${n.hash}` : e;
  } catch {
    return r.startsWith("/") && !r.startsWith("//") ? r : e;
  }
}
function I(r) {
  return (t) => {
    if (r.length !== 0) for (let e of r) e && (typeof e == "function" ? e(t) : "current" in e && (e.current = t));
  };
}
var g = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"';
function P(r) {
  return r ? `"${r}", ${g}` : g;
}
function A(r) {
  let t = parseFloat(r);
  return Math.round(t * 16);
}
function R(r) {
  if (typeof r != "number" || isNaN(r)) throw new Error(`Invalid pixel value: ${r}`);
  return `${r / 16}rem`;
}
function b(r) {
  if (!r) throw new Error("Hex color is undefined!");
  if (!/^#[0-9A-F]{6}$/i.test(r)) throw new Error(`Invalid hex color: ${r}`);
  let t = parseInt(r.substring(1, 3), 16), e = parseInt(r.substring(3, 5), 16), n = parseInt(r.substring(5, 7), 16);
  return `${t} ${e} ${n}`;
}
function N(r) {
  let t = {};
  return Object.entries(r).forEach(([e, n]) => {
    n && (t[`${e}Channel`] = b(n));
  }), { ...r, ...t };
}
function y(r, t) {
  let e = (i) => i.includes("var(--"), n = (i) => i.trim().endsWith("%"), o = { invalid: `[Alpha]: Invalid opacity "${r}" for ${t}.`, range: "Must be a number between 0 and 1 (e.g., 0.48).", format: 'Must be a percentage (e.g., "48%") or CSS variable (e.g., "var(--opacity)").' };
  if (typeof r == "string") {
    if (n(r)) return r;
    if (e(r)) return `calc(${r} * 100%)`;
    let i = parseFloat(r.trim());
    if (!isNaN(i) && i >= 0 && i <= 1) return `${Number((i * 100).toFixed(2))}%`;
    throw new Error(`${o.invalid} ${o.format}`);
  }
  if (typeof r == "number") {
    if (r >= 0 && r <= 1) return `${Number((r * 100).toFixed(2))}%`;
    throw new Error(`${o.invalid} ${o.range}`);
  }
  throw new Error(`${o.invalid}`);
}
function U(r, t = 1) {
  if (!(r == null ? void 0 : r.trim())) throw new Error("[Alpha]: Color is undefined or empty!");
  if (r.startsWith("#") || r.startsWith("rgb") || r.startsWith("rgba") || !r.includes("var") && r.includes("Channel")) throw new Error([`[Alpha]: Unsupported color format "${r}"`, "✅ Supported formats:", '- RGB channels: "0 184 217"', '- CSS variables with "Channel" prefix: "var(--palette-common-blackChannel, #000000)"', "❌ Unsupported formats:", '- Hex: "#00B8D9"', '- RGB: "rgb(0, 184, 217)"', '- RGBA: "rgba(0, 184, 217, 1)"'].join(`
`));
  let n = y(t, r);
  return r.toLowerCase() === "currentcolor" ? `color-mix(in srgb, currentColor ${n}, transparent)` : `rgba(${r} / ${n})`;
}
function V(r, t) {
  return !r || !t.length || typeof r != "object" ? false : t.every((e) => e in r);
}
function W() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (r) => {
    let t = Math.random() * 16 | 0;
    return (r === "x" ? t : t & 3 | 8).toString(16);
  });
}
function F(r, t) {
  let e = r ? Array.isArray(r) ? r : [r] : [], n = Object.entries(t || {}).filter(([o, i]) => i !== void 0 && i !== false).map(([o, i]) => Array.isArray(i) ? i[0] ? i[1] : "" : i ? o : "").filter(Boolean);
  return [...e.filter(Boolean), ...n].join(" ");
}
function D(r) {
  if (!r || typeof r != "string") return console.warn("Invalid cookie key provided"), null;
  try {
    let t = `${r}=`, o = decodeURIComponent(document.cookie).split("; ").find((s) => s.startsWith(t));
    if (!o) return null;
    let i = o.substring(t.length);
    try {
      return JSON.parse(i);
    } catch {
      return i;
    }
  } catch (t) {
    return console.error("Error retrieving cookie:", t), null;
  }
}
function M(r, t, e) {
  if (!r || typeof r != "string") {
    console.error("Invalid cookie key provided");
    return;
  }
  let { daysUntilExpiration: n = 0, sameSite: o = "Strict", secure: i = false, path: s = "/", domain: c } = e ?? {};
  try {
    let u = encodeURIComponent(typeof t == "string" ? t : JSON.stringify(t)), l = [`${r}=${u}`, `path=${s}`, o && `SameSite=${o}`, i && "Secure", c && `domain=${c}`];
    if (n > 0) {
      let h = new Date(Date.now() + n * 24 * 60 * 60 * 1e3);
      l.push(`expires=${h.toUTCString()}`);
    }
    document.cookie = l.filter(Boolean).join("; ");
  } catch (u) {
    console.error("Error setting cookie:", u);
  }
}
function J(r, t) {
  if (!r || typeof r != "string") {
    console.error("Invalid cookie key provided");
    return;
  }
  let { path: e = "/", domain: n } = t ?? {};
  try {
    let o = [`${r}=`, "expires=Thu, 01 Jan 1970 00:00:00 GMT", `path=${e}`, n && `domain=${n}`, "Secure"];
    document.cookie = o.filter(Boolean).join("; ");
  } catch (o) {
    console.error("Error removing cookie:", o);
  }
}
function H(r, t, e = true) {
  if (!r || !t) return console.warn("isActiveLink: pathname or itemPath is empty!"), false;
  if (t.startsWith("#") || m(t)) return false;
  let n = a(r), o = a(f(t));
  return e || p(t) ? n === o || n.startsWith(`${o}/`) || n.startsWith(`${o}?`) : n === o;
}
function z(r, t) {
  if (!w()) return t ?? null;
  let e = localStorage.getItem(r);
  if (e !== "undefined") {
    if (e) try {
      return JSON.parse(e);
    } catch {
      return e ?? t ?? null;
    }
    return t ?? null;
  }
}
function Y(r, t) {
  try {
    let e = JSON.stringify(t);
    window.localStorage.setItem(r, e);
  } catch (e) {
    console.error("Error while setting storage:", e);
  }
}
function Q(r) {
  try {
    window.localStorage.removeItem(r);
  } catch (t) {
    console.error("Error while removing from storage:", t);
  }
}
function w() {
  try {
    let r = "__some_random_key_you_are_not_going_to_use__";
    return window.localStorage.setItem(r, r), window.localStorage.removeItem(r), true;
  } catch {
    return false;
  }
}
function Z(r) {
  if (typeof r != "string" || !r.trim()) return console.error("Invalid input: CSS value must be a non-empty string"), "";
  let t = r.match(/var\(\s*(--[\w-]+)(?:\s*,[^)]*)?\s*\)/);
  return t ? t[1] : (console.error(`Invalid CSS variable format: "${r}". Expected format: var(--variable-name)`), "");
}
function d(r, t = "") {
  return r == null || typeof r == "number" && Number.isNaN(r) ? t : r.toString();
}
function S(r) {
  let e = d(r).replace(/[^0-9.]/g, ""), [n, ...o] = e.split(".");
  return o.length > 0 ? `${n}.${o.join("")}` : n;
}
function $(r, t = "") {
  if (r == null || typeof r == "number" && Number.isNaN(r)) return t;
  let e = parseFloat(r.toString());
  return Number.isNaN(e) ? t : e;
}
var tr = { onChange: S, onBlur: $, value: d };
export {
  N as createPaletteChannel,
  D as getCookie,
  z as getStorage,
  V as hasKeys,
  p as hasParams,
  b as hexToRgbChannel,
  H as isActiveLink,
  T as isEqualPath,
  m as isExternalLink,
  w as localStorageAvailable,
  F as mergeClasses,
  I as mergeRefs,
  Z as parseCssVar,
  R as pxToRem,
  A as remToPx,
  J as removeCookie,
  a as removeLastSlash,
  f as removeParams,
  Q as removeStorage,
  C as safeReturnUrl,
  M as setCookie,
  P as setFont,
  Y as setStorage,
  tr as transformNumber,
  d as transformValue,
  $ as transformValueOnBlur,
  S as transformValueOnChange,
  W as uuidv4,
  U as varAlpha
};
//# sourceMappingURL=minimal-shared_utils.js.map
