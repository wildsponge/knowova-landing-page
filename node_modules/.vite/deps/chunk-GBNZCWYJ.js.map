{
  "version": 3,
  "sources": ["../../@mui/material/esm/utils/debounce.js", "../../@mui/material/esm/utils/ownerDocument.js", "../../@mui/material/esm/utils/ownerWindow.js", "../../@mui/material/esm/utils/mergeSlotProps.js", "../../@mui/material/esm/utils/isMuiElement.js"],
  "sourcesContent": ["import debounce from '@mui/utils/debounce';\nexport default debounce;", "import ownerDocument from '@mui/utils/ownerDocument';\nexport default ownerDocument;", "import ownerWindow from '@mui/utils/ownerWindow';\nexport default ownerWindow;", "import clsx from 'clsx';\n\n// Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\n// Use it directly from Base UI once it's a package dependency.\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const thirdCharCode = key.charCodeAt(2);\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65 /* A */ && thirdCharCode <= 90 /* Z */ && typeof value === 'function';\n}\nexport default function mergeSlotProps(externalSlotProps, defaultSlotProps) {\n  if (!externalSlotProps) {\n    return defaultSlotProps;\n  }\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\n    const handlers = {};\n    Object.keys(defaultSlotPropsValue).forEach(key => {\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\n        // only compose the handlers if both default and external slot props match the event handler\n        handlers[key] = (...args) => {\n          externalSlotPropsValue[key](...args);\n          defaultSlotPropsValue[key](...args);\n        };\n      }\n    });\n    return handlers;\n  }\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\n    return ownerState => {\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps({\n        ...ownerState,\n        ...defaultSlotPropsValue\n      }) : externalSlotProps;\n      const className = clsx(ownerState?.className, defaultSlotPropsValue?.className, externalSlotPropsValue?.className);\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\n      return {\n        ...defaultSlotPropsValue,\n        ...externalSlotPropsValue,\n        ...handlers,\n        ...(!!className && {\n          className\n        }),\n        ...(defaultSlotPropsValue?.style && externalSlotPropsValue?.style && {\n          style: {\n            ...defaultSlotPropsValue.style,\n            ...externalSlotPropsValue.style\n          }\n        }),\n        ...(defaultSlotPropsValue?.sx && externalSlotPropsValue?.sx && {\n          sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\n        })\n      };\n    };\n  }\n  const typedDefaultSlotProps = defaultSlotProps;\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\n  const className = clsx(typedDefaultSlotProps?.className, externalSlotProps?.className);\n  return {\n    ...defaultSlotProps,\n    ...externalSlotProps,\n    ...handlers,\n    ...(!!className && {\n      className\n    }),\n    ...(typedDefaultSlotProps?.style && externalSlotProps?.style && {\n      style: {\n        ...typedDefaultSlotProps.style,\n        ...externalSlotProps.style\n      }\n    }),\n    ...(typedDefaultSlotProps?.sx && externalSlotProps?.sx && {\n      sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\n    })\n  };\n}", "import isMuiElement from '@mui/utils/isMuiElement';\nexport default isMuiElement;"],
  "mappings": ";;;;;;;;;;;;;;;AACA,IAAO,mBAAQ;;;ACAf,IAAO,wBAAQ;;;ACAf,IAAO,sBAAQ;;;ACGf,SAAS,eAAe,KAAK,OAAO;AAElC,QAAM,gBAAgB,IAAI,WAAW,CAAC;AACtC,SAAO,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM,OAAO,iBAAiB,MAAc,iBAAiB,MAAc,OAAO,UAAU;AAC5H;AACe,SAAR,eAAgC,mBAAmB,kBAAkB;AAC1E,MAAI,CAAC,mBAAmB;AACtB,WAAO;AAAA,EACT;AACA,WAAS,gBAAgB,wBAAwB,uBAAuB;AACtE,UAAMA,YAAW,CAAC;AAClB,WAAO,KAAK,qBAAqB,EAAE,QAAQ,SAAO;AAChD,UAAI,eAAe,KAAK,sBAAsB,GAAG,CAAC,KAAK,OAAO,uBAAuB,GAAG,MAAM,YAAY;AAExG,QAAAA,UAAS,GAAG,IAAI,IAAI,SAAS;AAC3B,iCAAuB,GAAG,EAAE,GAAG,IAAI;AACnC,gCAAsB,GAAG,EAAE,GAAG,IAAI;AAAA,QACpC;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAOA;AAAA,EACT;AACA,MAAI,OAAO,sBAAsB,cAAc,OAAO,qBAAqB,YAAY;AACrF,WAAO,gBAAc;AACnB,YAAM,wBAAwB,OAAO,qBAAqB,aAAa,iBAAiB,UAAU,IAAI;AACtG,YAAM,yBAAyB,OAAO,sBAAsB,aAAa,kBAAkB;AAAA,QACzF,GAAG;AAAA,QACH,GAAG;AAAA,MACL,CAAC,IAAI;AACL,YAAMC,aAAY,aAAK,yCAAY,WAAW,+DAAuB,WAAW,iEAAwB,SAAS;AACjH,YAAMD,YAAW,gBAAgB,wBAAwB,qBAAqB;AAC9E,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAGA;AAAA,QACH,GAAI,CAAC,CAACC,cAAa;AAAA,UACjB,WAAAA;AAAA,QACF;AAAA,QACA,IAAI,+DAAuB,WAAS,iEAAwB,UAAS;AAAA,UACnE,OAAO;AAAA,YACL,GAAG,sBAAsB;AAAA,YACzB,GAAG,uBAAuB;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,IAAI,+DAAuB,QAAM,iEAAwB,OAAM;AAAA,UAC7D,IAAI,CAAC,GAAI,MAAM,QAAQ,sBAAsB,EAAE,IAAI,sBAAsB,KAAK,CAAC,sBAAsB,EAAE,GAAI,GAAI,MAAM,QAAQ,uBAAuB,EAAE,IAAI,uBAAuB,KAAK,CAAC,uBAAuB,EAAE,CAAE;AAAA,QACpN;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,QAAM,wBAAwB;AAC9B,QAAM,WAAW,gBAAgB,mBAAmB,qBAAqB;AACzE,QAAM,YAAY,aAAK,+DAAuB,WAAW,uDAAmB,SAAS;AACrF,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAI,CAAC,CAAC,aAAa;AAAA,MACjB;AAAA,IACF;AAAA,IACA,IAAI,+DAAuB,WAAS,uDAAmB,UAAS;AAAA,MAC9D,OAAO;AAAA,QACL,GAAG,sBAAsB;AAAA,QACzB,GAAG,kBAAkB;AAAA,MACvB;AAAA,IACF;AAAA,IACA,IAAI,+DAAuB,QAAM,uDAAmB,OAAM;AAAA,MACxD,IAAI,CAAC,GAAI,MAAM,QAAQ,sBAAsB,EAAE,IAAI,sBAAsB,KAAK,CAAC,sBAAsB,EAAE,GAAI,GAAI,MAAM,QAAQ,kBAAkB,EAAE,IAAI,kBAAkB,KAAK,CAAC,kBAAkB,EAAE,CAAE;AAAA,IACrM;AAAA,EACF;AACF;;;ACzEA,IAAO,uBAAQ;",
  "names": ["handlers", "className"]
}
