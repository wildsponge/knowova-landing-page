"use strict";var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var d=Object.prototype.hasOwnProperty;var l=(n,r)=>{for(var t in r)a(n,t,{get:r[t],enumerable:!0})},f=(n,r,t,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of g(r))!d.call(n,s)&&s!==t&&a(n,s,{get:()=>r[s],enumerable:!(e=u(r,s))||e.enumerable});return n};var p=n=>f(a({},"__esModule",{value:!0}),n);var $={};l($,{createPaletteChannel:()=>h,hexToRgbChannel:()=>o,varAlpha:()=>c});module.exports=p($);function o(n){if(!n)throw new Error("Hex color is undefined!");if(!/^#[0-9A-F]{6}$/i.test(n))throw new Error(`Invalid hex color: ${n}`);let r=parseInt(n.substring(1,3),16),t=parseInt(n.substring(3,5),16),e=parseInt(n.substring(5,7),16);return`${r} ${t} ${e}`}function h(n){let r={};return Object.entries(n).forEach(([t,e])=>{e&&(r[`${t}Channel`]=o(e))}),{...n,...r}}function b(n,r){let t=i=>i.includes("var(--"),e=i=>i.trim().endsWith("%"),s={invalid:`[Alpha]: Invalid opacity "${n}" for ${r}.`,range:"Must be a number between 0 and 1 (e.g., 0.48).",format:'Must be a percentage (e.g., "48%") or CSS variable (e.g., "var(--opacity)").'};if(typeof n=="string"){if(e(n))return n;if(t(n))return`calc(${n} * 100%)`;let i=parseFloat(n.trim());if(!isNaN(i)&&i>=0&&i<=1)return`${Number((i*100).toFixed(2))}%`;throw new Error(`${s.invalid} ${s.format}`)}if(typeof n=="number"){if(n>=0&&n<=1)return`${Number((n*100).toFixed(2))}%`;throw new Error(`${s.invalid} ${s.range}`)}throw new Error(`${s.invalid}`)}function c(n,r=1){if(!n?.trim())throw new Error("[Alpha]: Color is undefined or empty!");if(n.startsWith("#")||n.startsWith("rgb")||n.startsWith("rgba")||!n.includes("var")&&n.includes("Channel"))throw new Error([`[Alpha]: Unsupported color format "${n}"`,"\u2705 Supported formats:",'- RGB channels: "0 184 217"','- CSS variables with "Channel" prefix: "var(--palette-common-blackChannel, #000000)"',"\u274C Unsupported formats:",'- Hex: "#00B8D9"','- RGB: "rgb(0, 184, 217)"','- RGBA: "rgba(0, 184, 217, 1)"'].join(`
`));let e=b(r,n);return n.toLowerCase()==="currentcolor"?`color-mix(in srgb, currentColor ${e}, transparent)`:`rgba(${n} / ${e})`}0&&(module.exports={createPaletteChannel,hexToRgbChannel,varAlpha});
