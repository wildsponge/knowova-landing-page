"use strict";var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var d=Object.prototype.hasOwnProperty;var f=(r,n)=>{for(var t in n)a(r,t,{get:n[t],enumerable:!0})},l=(r,n,t,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of g(n))!d.call(r,s)&&s!==t&&a(r,s,{get:()=>n[s],enumerable:!(e=u(n,s))||e.enumerable});return r};var p=r=>l(a({},"__esModule",{value:!0}),r);var $={};f($,{createPaletteChannel:()=>h,hexToRgbChannel:()=>o,varAlpha:()=>c});module.exports=p($);function o(r){if(!r)throw new Error("Hex color is undefined!");if(!/^#[0-9A-F]{6}$/i.test(r))throw new Error(`Invalid hex color: ${r}`);let n=parseInt(r.substring(1,3),16),t=parseInt(r.substring(3,5),16),e=parseInt(r.substring(5,7),16);return`${n} ${t} ${e}`}function h(r){let n={};return Object.entries(r).forEach(([t,e])=>{e&&(n[`${t}Channel`]=o(e))}),{...r,...n}}function b(r,n){let t=i=>i.includes("var(--"),e=i=>i.trim().endsWith("%"),s={invalid:`[Alpha]: Invalid opacity "${r}" for ${n}.`,range:"Must be a number between 0 and 1 (e.g., 0.48).",format:'Must be a percentage (e.g., "48%") or CSS variable (e.g., "var(--opacity)").'};if(typeof r=="string"){if(e(r))return r;if(t(r))return`calc(${r} * 100%)`;let i=parseFloat(r.trim());if(!isNaN(i)&&i>=0&&i<=1)return`${Number((i*100).toFixed(2))}%`;throw new Error(`${s.invalid} ${s.format}`)}if(typeof r=="number"){if(r>=0&&r<=1)return`${Number((r*100).toFixed(2))}%`;throw new Error(`${s.invalid} ${s.range}`)}throw new Error(`${s.invalid}`)}function c(r,n=1){if(!r?.trim())throw new Error("[Alpha]: Color is undefined or empty!");if(r.startsWith("#")||r.startsWith("rgb")||r.startsWith("rgba")||!r.includes("var")&&r.includes("Channel"))throw new Error([`[Alpha]: Unsupported color format "${r}"`,"\u2705 Supported formats:",'- RGB channels: "0 184 217"','- CSS variables with "Channel" prefix: "var(--palette-common-blackChannel, #000000)"',"\u274C Unsupported formats:",'- Hex: "#00B8D9"','- RGB: "rgb(0, 184, 217)"','- RGBA: "rgba(0, 184, 217, 1)"'].join(`
`));let e=b(n,r);return r.toLowerCase()==="currentcolor"?`color-mix(in srgb, currentColor ${e}, transparent)`:`rgba(${r} / ${e})`}0&&(module.exports={createPaletteChannel,hexToRgbChannel,varAlpha});
