type InputValue = string | number | null | undefined;
/**
 * Transforms the input value to a string.
 *
 * @param {InputValue} value - The value to transform.
 * @param {string} [defaultValue=''] - The default value to return if the input value is null, undefined, or NaN.
 * @returns {string} - The transformed string value.
 */
declare function transformValue(value: InputValue, defaultValue?: string): string;
/**
 * Transforms the output value on change event.
 *
 * @param {string | number} value - The value to transform.
 * @returns {string} - The cleaned and transformed value.
 */
declare function transformValueOnChange(value: string | number): string;
/**
 * Transforms the output value on blur event.
 *
 * @param {InputValue} value - The value to transform.
 * @param {string | number} [defaultValue=''] - The default value to return if the input value is null, undefined, or NaN.
 * @returns {string | number} - The transformed numeric value or the default value.
 */
declare function transformValueOnBlur(value: InputValue, defaultValue?: string | number): string | number;
declare const transformNumber: {
    onChange: typeof transformValueOnChange;
    onBlur: typeof transformValueOnBlur;
    value: typeof transformValue;
};

export { type InputValue, transformNumber, transformValue, transformValueOnBlur, transformValueOnChange };
